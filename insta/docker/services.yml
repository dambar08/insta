name: insta
services:

  db:
    image: postgres:16-alpine
    shm_size: 256mb
    build:
      context: .
      dockerfile: postgres/Dockerfile
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: insta
      POSTGRES_PASSWORD: insta
      POSTGRES_DATABASE: insta_development
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
     - db_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"

  testdb:
    image: postgres:16-alpine
    shm_size: 256mb
    build:
      context: .
      dockerfile: postgres/Dockerfile
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: insta
      POSTGRES_PASSWORD: insta
      POSTGRES_DATABASE: insta_test
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
     - testdb_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432"

  redis:
    image: redis:7.2.5-alpine
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis:/data
    ports:
      - 127.0.0.1:6379:6379


volumes:
  db_data:
  testdb_data:
  redis:
